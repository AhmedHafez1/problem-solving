{"mappings":"AAAA,+DAEC,GACD,SAAS,MAAM,KAAe,EAAE,CAAS,EAAE,KAAe,EAAE,CAAS,EAAQ;IAC3E,MAAM,IAAI,IAAI;IACd,MAAM,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI;IACzB,MAAM,cAAc,MAAM,SAAS,CAAC,CAAC,IAAM,MAAM;IAEjD,MAAM,MAAM,CAAC,cAAc,KAAK,cAAc,CAAC,EAAE;AACnD;AAEA,MAAM,KAAK;IAAC;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;CAAE;AAChC,MAAM,KAAK;IAAC;IAAG;IAAG;CAAE;AAEpB,MAAM,IAAI,GAAG,IAAI;AAEjB,QAAQ,GAAG,CAAC","sources":["index.ts"],"sourcesContent":["/**\r\n Do not return anything, modify nums1 in-place instead.\r\n */\r\nfunction merge(nums1: number[], m: number, nums2: number[], n: number): void {\r\n  nums1.push(...nums2);\r\n  nums1.sort((a, b) => a - b);\r\n  const indexOfZero = nums1.findIndex((x) => x === 0);\r\n\r\n  nums1.splice(indexOfZero > -1 ? indexOfZero : 0, n);\r\n}\r\n\r\nconst a1 = [1, 4, 5, 9, 0, 0, 0];\r\nconst a2 = [2, 6, 8];\r\n\r\nmerge(a1, 4, a2, 3);\r\n\r\nconsole.log(a1);\r\n"],"names":[],"version":3,"file":"index.242b51c6.js.map","sourceRoot":"/__parcel_source_root/"}